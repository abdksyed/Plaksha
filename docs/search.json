[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Plaksha",
    "section": "",
    "text": "Thie website contains all the content regarding TLP 2022-23"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "03_Intro_AI/index.html",
    "href": "03_Intro_AI/index.html",
    "title": "Introduction to Artificial Intelligence",
    "section": "",
    "text": "AI Today compared to Dartmouth Workshop"
  },
  {
    "objectID": "03_Intro_AI/01_Lab01.html",
    "href": "03_Intro_AI/01_Lab01.html",
    "title": "AI Today Compared to Dartmouth Workshop",
    "section": "",
    "text": "How has the focus on AI shifted from this original proposal to today? Specifically, talk about imbuing AI with human thinking and intelligence.\nThe major change in today’s AI would be the proper definition of tasks and problems being solved, whereas, in the Dartmouth workshop proposal, the problems which were trying to be solved were abstract and high-level.\nToday’s AI is more and more data dependent where with lots of data available today, the models are based on learning patterns in the data rather than learning the general environment. This approach of learning from data which is curated and marked, known as supervised learning, has limitations in scaling.\nWe humans from childhood start learning patterns from what we see even without many labels, and we use the prior information we learn through life to learn new things. The field of AI has been trying to simulate this phenomenon of learning from the environment directly without having labelled data, by exposing the AI to a large magnitude of unlabelled data, which allows the system to learn the representation of the world and objects and form an approximate model of common-sense. This method today was coined as the dark matter of intelligence[1].\nAnother common method today to build AI is how humans build intelligence by playing games and practising. AI today is trained to play games by playing against itself a very large number of times and to self-improve with time, which was also part of the proposal in the workshop.\nCommentary on the long-term implications of the workshop.\nThe workshop was the spark to start a huge field, which went through multiple ups and downs. The idea of computers being able to simulate or solve any real-world problem is still not achieved, but the progress so far has been great with various successes in the field of vision and language. The workshop brainstormed about different problems computers can solve on their own, and made people think about computers as not just tools to perform instructions but as intelligent beings.\nReferences\n[1] LeCun, Yan & Misra, Ishan. Self-supervised learning: The dark matter of intelligence. Meta AI. https://ai.facebook.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/"
  },
  {
    "objectID": "01_Mathematics_I/06_Maths_PageRank.html",
    "href": "01_Mathematics_I/06_Maths_PageRank.html",
    "title": "Plaksha",
    "section": "",
    "text": "08 Assignment - Page Rank\n\nimport random\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nQuestion 1\nConsider any \\(2×2\\) matrix \\(A\\) and apply the matrix on a \\(2×1\\) vector \\(v\\). Keep applying this matrix and notice that the direction converges, while the magnitude may get larger. Keep normalizing \\(v\\) and notice the direction to which it converges. Use Numpy\n\nsomeMatrix = np.array([\n    [1,2],\n    [3,4]\n])\n\nsomeVector = np.array([2,3])\n\nprint(f\"Shape of Matrix: {someMatrix.shape}\")\nprint(f\"Shape of Vecotr: {someVector.shape}\")\n\nShape of Matrix: (2, 2)\nShape of Vecotr: (2,)\n\n\n\ndef angleBetween(v1, v2):\n    unit_v1 = v1/np.linalg.norm(v1)\n    unit_v2 = v2/np.linalg.norm(v2)\n    # Finding cos inverse of dot product to get angle in radians\n    # Convertring to degree\n    return 360*(np.arccos(np.dot(unit_v1, unit_v2))) / (2*np.pi)\n\n\nx_axis = np.array([1,0])\nsomeVectorAngle = [angleBetween(someVector, x_axis)]\n\nfor _ in range(999):\n    someVector = np.matmul(someMatrix, someVector)\n    someVector = someVector/np.linalg.norm(someVector)\n    someVectorAngle.append(angleBetween(someVector, x_axis))\n\n\nnp.linalg.eig(someMatrix)\n\n(array([-0.37228132,  5.37228132]),\n array([[-0.82456484, -0.41597356],\n        [ 0.56576746, -0.90937671]]))\n\n\n\nprin_eig = np.linalg.eig(someMatrix)[1][:,1]\n\n\nprin_eig, someVector\n\n(array([-0.41597356, -0.90937671]), array([0.41597356, 0.90937671]))\n\n\n\nx = list(range(1,1001))\ny = [angleBetween(prin_eig, x_axis)]*1000\nplt.plot(np.log(x),someVectorAngle, label=\"Convergence\")\nplt.legend()\n\n<matplotlib.legend.Legend>\n\n\n\n\n\nQuestion 3\n\n\nProbabilityMatrix = np.array([\n        [0,0,0,0.5,0.5,1,1,1],\n        [0.5,0,0,0,0,0,0,0],\n        [0.5,0,0,0,0,0,0,0],\n        [0,0.5,0,0,0,0,0,0],\n        [0,0.5,0,0,0,0,0,0],\n        [0,0,0.5,0,0,0,0,0],\n        [0,0,0.5,0,0,0,0,0],\n        [0,0,0,0.5,0.5,0,0,0]\n    ])\n\n\nnp.linalg.eig(ProbabilityMatrix)[1][:,0]/np.linalg.norm(np.linalg.eig(ProbabilityMatrix)[1][:,0])\n\narray([0.74278135+0.j, 0.37139068+0.j, 0.37139068+0.j, 0.18569534+0.j,\n       0.18569534+0.j, 0.18569534+0.j, 0.18569534+0.j, 0.18569534+0.j])\n\n\n\nnp.linalg.matrix_power(ProbabilityMatrix, 1000)[:,0]*2.4141\n\narray([0.7428, 0.3714, 0.3714, 0.1857, 0.1857, 0.1857, 0.1857, 0.1857])\n\n\nQuestion 4\nWrite down the edge list of the above graph and use networkx to run a random walk on it. What is the distribution of visits?\n\ngraph = {\n    'a': ['b', 'c'],\n    'b': ['d', 'e'],\n    'c': ['f', 'g'],\n    'd': ['a', 'h'],\n    'e': ['a', 'h'],\n    'f': ['a'],\n    'g': ['a'],\n    'h': ['a']\n}\n\n\npointer = random.choice(list(graph.keys()))\nvisits = {k:0 for k,v in graph.items()}\nfor _ in range(8000):\n    pointer = random.choice(graph[pointer])\n    visits[pointer] += 1\n\n\npointer = random.choice(list(graph.keys()))\nvisits = {k:0 for k,v in graph.items()}\nfor _ in range(10000):\n    for _ in range(1000):\n        pointer = random.choice(graph[pointer])\n    visits[pointer] += 1\n\n\nnodes = list(visits.keys())\nvalues = list(visits.values())\nplt.bar(nodes, values)\nplt.plot(nodes,values, color='red')\n\n\n\n\nQuestion 5\nAre the following two questions equivalent?:\n\nIf I were to give pocket money to two of my daughters: 500 rupees each.\nI toss a coin and give my elder daughter 1000 rupees if its heads or the younger daughter 1000 rupees if its tails.\nAre these two statements equivalent? In the sense that, by the end of the year, do you think both my daughters would have received, more or less, the same amount of money?\n\n\n# Case 1 - Always Rs.500\n\nyounger_daughter_equal = 0\nelder_daughter_equal = 0\n\nyd_eq_list = []\ned_eq_list = []\n\nfor _ in range(365):\n    younger_daughter_equal += 500\n    yd_eq_list.append(younger_daughter_equal)\n    elder_daughter_equal += 500\n    ed_eq_list.append(elder_daughter_equal)\n\n\n# Case 2 - Giving Rs.1000 based on Toss Coin.\n\nyounger_daughter_coin = 0\nelder_daughter_coin = 0\n\nyd_coin_list = []\ned_coin_list = []\n\nfor _ in range(365):\n    if random.choice([0,1]):\n        younger_daughter_coin += 1000\n        yd_coin_list.append(younger_daughter_coin)\n        ed_coin_list.append(elder_daughter_coin)\n    else:\n        elder_daughter_coin += 1000\n        ed_coin_list.append(elder_daughter_coin)\n        yd_coin_list.append(younger_daughter_coin)\n\n\nplt.plot(list(range(365)), yd_eq_list, label=\"Equal Distribution\")\nplt.plot(list(range(365)), yd_coin_list, label=\"Coin Toss Distribution\")\nplt.legend()\n\n<matplotlib.legend.Legend>\n\n\n\n\n\nQuestion 6 Consider the adjacency matrix of the above graph, tweak it and observe that the principal eigen vector is same as the answer to the previous question. (Principal Eigen Vector is defined as the eigen vector corresponding to the highest eigen value) — INCORRECT QUESTION —\nNew Question 6 Solve for Two Simultaneous Equations\n\ndef findIntersection(slope1, intercept1, slope2, intercept2):\n    if slope1 == slope2:\n        return -1\n    x = (intercept1-intercept2)/(slope2-slope1)\n    return (x, slope1*x+intercept1)\n\n\nfindIntersection(0,0,1,0)\n\n(0.0, 0.0)\n\n\nQuestion 7\nCan you consider a network of vertices, in the order of thousands and figure out the answer? You will observe that the best method to use is the random walk (with teleportation). why?\nIf the number of vertices are very high like thousands, the method to calculate eigen vectors requires matrix multiplications which is \\(O(n^2)\\), where as a random walk is a linear operation."
  },
  {
    "objectID": "01_Mathematics_I/01_Maths_09_Sept.html",
    "href": "01_Mathematics_I/01_Maths_09_Sept.html",
    "title": "Plaksha",
    "section": "",
    "text": "import math\nimport random\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef findMinima(equation: callable, step_size: float, step_reduce: float, iterations: int):\n    oldX = random.random()\n    print(f\"Starting with Random Numebr of {oldX}\")\n    oldY = equation(oldX)\n\n    oldestX = oldX\n    oldestY = oldY\n\n    valuesY = [oldY]\n\n    i = 1\n    while True:\n        newX = oldX + step_size\n        newY = equation(newX)\n        if newY > oldY:\n            oldY = oldestY\n            step_size /= step_reduce\n            oldX = oldestX\n        else:\n            valuesY.append(newY)\n            oldY, oldestY = newY, oldY\n            oldX, oldestX = newX, oldX\n\n        i += 1\n        if i == iterations:\n            break\n    \n    return valuesY, newX\n\n\niterations = 100\ndistanceValues, finalX = findMinima(lambda x : math.sqrt(50*(x**2) - 142*x + 101), 0.1, 10, iterations)\nxAxis = np.log(list(range(1,iterations+1)))\nplt.plot(distanceValues)\n\nStarting with Random Numebr of 0.3019662499232486\n\n\n\n\n\n\nprint(f\"Final value of X is: {finalX} and Loss Value is {distanceValues[-1]}\")\n\nFinal value of X is: 1.420000001024248 and Loss Value is 0.42426406871190303\n\n\n\n\n\nimport random\nnumHeads = []\nfor ball in range(1000):\n    sum = 0\n    for nail in range(50):\n        sum += random.randint(0,1)\n    numHeads.append(sum)"
  },
  {
    "objectID": "01_Mathematics_I/index.html",
    "href": "01_Mathematics_I/index.html",
    "title": "Mathematics I",
    "section": "",
    "text": "Linear Algebra Questionverse\n9th September Notes\n11th September Notes\n12th September Notes\n12th September Problems\n13th September Notes\nPage Rank\nProject - Predict Leader"
  },
  {
    "objectID": "01_Mathematics_I/03_Maths_12_Sept.html",
    "href": "01_Mathematics_I/03_Maths_12_Sept.html",
    "title": "Plaksha",
    "section": "",
    "text": "05 Maths Assignment 12th September\nQuestion1\nConsider the matrix\n\\[\\begin{bmatrix}\n1 & 2\\\\\n3 & 4\n\\end{bmatrix}\\]\n\nWhat does it remind you of?\nWhat does it denote?\nWhere and why do we use a matrix?\nCan you enlist a few applications of matrices?\n\nThe above matrix reminds of the system of equations with two equations and two unknowns.\nIt denotes two vectors in the 2D-space (\\(ℝ^2\\)) which can also be interpreted as two equations.\nWe use a matrix as a function, and also to solve for unknows given equations.\nMatrices are functions which transforms vectors from one space to another space.\nMatrices are used to solve equations as they are represented in a simple manner.\nMatrices helps in storing data like images where elements are values of pixel intensity.\nQuestion 2\nDefine a function. What is a surjective, injective and bijective function?\nA function is a mapping from one space to another space, where each element in the left space(Domain) can have one and only mapping to the element in the right space(Co-domain).\nFunction takes an input from Domain and maps it to an element in co-domain.\nThere can be two or more elements in Domain mapping to same element in co-domain, but there can never be an element in Domain mapping multiple elements in co-domain.\nA Valid Function\n\nAn Invalid Function\n\nImage Credits: https://en.wikipedia.org/wiki/Function_%28mathematics%29\nSurjective Function\nThe onto function, is where every element in co-domain has atleast one pre-image in the domain.\n\nImage Credits: https://en.wikipedia.org/wiki/Surjective_function\nInjective Function\nThe one-one function, is where there is only one unique mapping to the element in the co-domain, there can be elements in co-domain which are not mapped, but function must map the elements of the domain to unique element in co-domain.\n\nImage Credits: https://en.wikipedia.org/wiki/Injective_function\nBijective Function\nIt is the combination of both the surjection and injection function, where every element in X is mapped to a unique(exactly one) element in Y, and there are no unpaired elements.\n\nImage Credits: https://en.wikipedia.org/wiki/Bijection\nQuestion 3\nGiven an example of a function \\(f:ℝ^2 → ℝ^2\\)\nA function which maps from \\(ℝ^2\\) to \\(ℝ^2\\) will be \\((x,y)\\) to \\((y,x)\\), where the function is mirror reflection along the \\(x=y\\) line\nQuestion 4\nGiven an example of a very nice function \\(f:ℝ^2 → ℝ^2\\) * Make extra efforts to make this function really nice. * Explain what is so nice about your function? * Why should one study such functions?\nA really nice function is the softmax function. The excellent property of this function is it can convert any point in \\(ℝ^2\\) to a probability distribution, which is a vector of probabilities and they are relative to the scale of value in the original vector.\n\\(softmax = \\frac{e^{z_i}}{\\displaystyle\\sum_{j=1}^{k} e^{z_j}}\\)\nFor each value in vector, it exponentiates the value, and divide it by the sum of all values being exponentiated, which gives the sum of all values after applying softmax to 1.\nThe important reason to study such functions, is to make use of it for various applications like classification, where a binary classification problem which gives some arbitrary values can be converted to a nice probability looking value.\nQuestion 7\nConsider \\(ℝ^2\\). What are all the properties of this set? \\(ℝ^2\\) is called a space of all vectors, a.k.a a vector space. Lookup for the definition of a vector space.\nThis set contains all the elements of the form \\((x,y)\\) where \\(x,y \\in ℝ\\). Any vector from this space, when added with another vector from the same space gives a resultant vector, which will also be part of the same space(\\(ℝ^2\\)). Hence it is called the space of all vectors of size 2.\nA vector space can be defined if a set of vectors \\(V\\) and two operations \\(*, +\\) which can be defined in any way, and for our purposes we consider the operatins as general addition and multiplication, must follow the following rules.\n\nThere must be an element 0, where \\(x+0=x, x \\in R^2\\)\nThe vector \\(\\alpha x\\) must belong to \\(ℝ^2\\)\nTwo vectors \\(x,y \\in ℝ^2\\) when added \\(x + y\\) must belong to \\(ℝ^2\\)\n\nQuestion 8\nA subset of a vector space which in itself is a vector space is caled a subspace. Given an example of a subspace of \\(ℝ^2\\).\nThe subspaces of \\(ℝ^2\\) are the zero vector \\((0,0)\\). Any line \\(\\alpha(x,y)\\) and the entire \\(ℝ^2\\) itself.\nQuestion 9\nGiven a vector \\((1,7)\\) what does the set \\({α(1,7)|α∈ℝ}\\) represent? Is it a subspace of \\(ℝ^2\\)?\nThe set of all vectors \\(\\alpha(1,7)\\) represent a line in \\(ℝ^2\\), which is a subspace of \\(ℝ^2\\)\nQuestion 10\nIs \\(ℝ^3\\) a vector space?\nYes, \\(ℝ^3\\) is a subspace as it follows all the 10 axioms of the vector space.\nQuestion 11\nConside the two points \\((1,2,3)\\) and \\((4,5,7)∈ℝ^3\\). What does the following set denote: \\({α(1,2,3)+β(4,5,7)|α,β∈ℝ}\\). Is this a subspace?\nThe following set \\({α(1,2,3)+β(4,5,7)|α,β∈ℝ}\\) denotes the plane in \\(ℝ^3\\). Since both the vectors \\((1,2,3)\\) and \\((4,5,7)\\) are indepent of each other.\nYes, the above plane is a subspace of \\(ℝ^3\\)\nQuestion 53\nSolve the following : \\[\nx−2y=15\n\\] \\[\nx+4y=19\n\\]\n\nIsn’t this the same as \\[\n\\begin{equation}\n\\begin{bmatrix}\n1 & -2\\\\\n1 & 4\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\ny\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n15\\\\\n19\n\\end{bmatrix}\n\\end{equation}\n\\]\nYou are trying to find if there is an element in the domain which maps to \\((15,19)\\).\nWhat exactly is happening here ? (Say all that you can)\n\nYes, \\((1)\\) is just the matrix representation of the system of equations which are needed to be solved.\nYes, by representing the equations in the matrix form, we are trying to find the unknown \\(x\\) and \\(y\\) which maps to \\((15,19)\\)"
  },
  {
    "objectID": "01_Mathematics_I/02_Maths_11_Sept.html",
    "href": "01_Mathematics_I/02_Maths_11_Sept.html",
    "title": "Plaksha",
    "section": "",
    "text": "04 Maths Assignment 11th September\n\nfrom typing import List\nimport random\nimport math\n\n\nBubble Sort\n\ndef bubbleSort(array: List):\n    length = len(array)\n    for i in range(length, 0, -1):\n        noSwap = True\n        for j in range(i-1):\n            if array[j] > array[j+1]:\n                array[j], array[j+1] = array[j+1], array[j]\n                noSwap = False\n    if noSwap:\n        return array\n    return array\n\n\nrandomArray = list(range(34, 1225))\nrandom.shuffle(randomArray)\n\nassert sorted(randomArray) == bubbleSort(randomArray)\n\n\n\nSelection Sort\n\ndef selectionSort(array:List) -> List:\n    for i in range(len(array)-1):\n        min = i\n        for j in range(i+1,len(array)):\n            if array[j] < array[min]:\n                min = j\n        array[min], array[i] = array[i], array[min]\n    return array\n\n\nrandomArray = list(range(34, 1225))\nrandom.shuffle(randomArray)\n\nassert sorted(randomArray) == selectionSort(randomArray)\n\n\n\nLinear Search\n\ndef linearSearch(array: List, numToFind: int) -> int :\n    for idx, element in enumerate(array):\n        if element == numToFind:\n            return idx\n    return -1\n\n\nassert linearSearch(list(range(1000)),465) == 465\n\nprint(linearSearch(random.sample(list(range(1000)), 900), 1456))\nprint(linearSearch(random.sample(list(range(1000)), 900), 156))\n\n-1\n800\n\n\n\n\nBinary Search\n\ndef binarySearch(array:List, numToFind: int) -> int:\n    start = 0\n    end = len(array) - 1\n\n    while start < end:\n        mid = (start+end) // 2\n        \n        if array[mid] == numToFind:\n            return mid\n        elif array[mid] > numToFind:\n            end = mid - 1\n        else:\n            start = mid + 1\n    \n    return -1\n\n\nassert binarySearch(list(range(1000)), 1678) == -1\nassert binarySearch(list(range(1000)), 678) == 678\n\n\n\nTime Taken for Each Algo\n\nsomeArray = list(range(1000))\nsortedArray = someArray.copy()\nrandomArray = random.sample(someArray, 1000)\n\nTime Taken for Bubble Sort\n\n%timeit bubbleSort(randomArray)\n\n22 ms ± 162 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n\n\nTime Taken for Selection Sort\n\n%timeit selectionSort(randomArray)\n\n17.7 ms ± 122 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\nTime Taken for In-Built Sort\n\n%timeit sorted(randomArray)\n\n3.55 µs ± 14.1 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\n\n\nIn-Built sort is 15215 times faster than Bubble Sort.\nIn-Built sort is 12957 times faster than Selection Sort.\nTime Taken for Linear Search\n\n%timeit linearSearch(sortedArray, random.choice(someArray))\n\n11.7 µs ± 115 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\n\n\nTime Taken for Binary Search\n\n%timeit binarySearch(sortedArray, random.choice(someArray))\n\n1.24 µs ± 37.2 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each)\n\n\nTime Taken for In-Built Search\n\n%timeit random.choice(someArray) in sortedArray\n\n3.26 µs ± 47.9 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\n\n\n\n%timeit random.choice(someArray) in randomArray\n\n3.32 µs ± 105 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\n\n\nIn-Built search is fast for both Sorted and Random Array."
  },
  {
    "objectID": "01_Mathematics_I/07_Maths_Project.html",
    "href": "01_Mathematics_I/07_Maths_Project.html",
    "title": "Plaksha",
    "section": "",
    "text": "09 Predict the Leader\n\nImports\n\nfrom typing import List\nimport random\n\nimport csv\nimport matplotlib.pyplot as plt\n\n\n\nMaking the Network from the CSV file\n\ndef make_graph(file_name: str) -> dict:\n    with open(file_name, \"r\") as csv_file:\n        csv_data = csv.reader(csv_file)\n        # Take All Names of Nominations from 1st column.\n        # Since 0th column is Title \"Name\"\n        NOMINATIONS = next(csv_data)[1:]\n        NETWORK = {name: [] for name in NOMINATIONS}\n\n        for row in csv_data:\n            votee = row[0]\n            for idx, isVote in enumerate(row[1:]):\n                if isVote == '1':\n                    NETWORK[NOMINATIONS[idx]].append(votee)\n    return NETWORK\n\n\nNETWORK = make_graph(\"./data/TLP_Leader_Data.csv\")\n\n\nNetwork Test to match values\n\n# Netwrok Check\nassert NETWORK['Abdul Khader, Syed'] == [\"Gupta, Aayush\", \"R K, Vysakh\"], \"Network is INCORRECT\"\n\n\nassert NETWORK['R K, Vysakh'] == ['Gupta, Aayush', 'Gowda, Adarsh', 'Narayan, Anchit', 'Sankar, Kirubananth', \n                                'Bhardwaj, Kunal', 'Walia, Muskaan', 'Krishna K, Pramod', 'Pandey, Savyasachi', \n                                'Pasricha, Stuti', 'Abdul Khader, Syed', 'Kumar Singh, Tejasvi', 'Pani, Tirtha', \n                                'Kumar, Vivek']\n\n\n\n\nRandom Walk for NUMBER_WALKS times\n\npointer = random.choice(list(NETWORK.keys()))\nvisits = {k:0 for k,v in NETWORK.items()}\nNUMBER_WALKS = 40_000\nfor _ in range(NUMBER_WALKS):\n    pointer = random.choice(NETWORK[pointer])\n    visits[pointer] += 1\n\n\n\nPlotting\n\norderedVisits = sorted(visits.items(), key = lambda item: item[1], reverse=True)\nnodes = [key for key,val in orderedVisits]\nvalues = [val/NUMBER_WALKS for key,val in orderedVisits]\n\n# The Adjust the Plot Size\nplt.figure(figsize = (18,12))\n\n# To Have the x-axis label as vertical\nplt.xticks(rotation=90)\n\n# Bar Graph\nplt.bar(nodes, values)\n\n# To plot the number value on each Bar\nfor i, v in enumerate(values):\n    plt.text(i-0.2, v+0.0007, str(round(v*100,2))+\"%\", color='black', fontweight='bold', rotation=90)\n\nplt.show()\n\n\n\n\n\nTop 5 Standings\n\nfor idx, (name, percentageVoting) in enumerate(orderedVisits[:5]):\n    print(f\"{name} has Rank:{idx+1} with the vote percentage of: {round(percentageVoting/NUMBER_WALKS * 100,2)}%\")\n\nGupta, Aayush has Rank:1 with the vote percentage of: 10.21%\nR K, Vysakh has Rank:2 with the vote percentage of: 4.51%\nPasricha, Stuti has Rank:3 with the vote percentage of: 3.57%\nSonnathi, Sumanth has Rank:4 with the vote percentage of: 3.28%\nGupta, Shivanshu has Rank:5 with the vote percentage of: 3.21%"
  },
  {
    "objectID": "01_Mathematics_I/00_LinearAlgebra.html",
    "href": "01_Mathematics_I/00_LinearAlgebra.html",
    "title": "Linear Algebra Questionverse",
    "section": "",
    "text": "1. What is scaling? What is a scalar? What is a vector?\nThe act of either extending/stretching or contracting/squishing something is known as scaling, and the amount it is changed, is given by a number, which is known as a scalar, which denotes that it scales something. This scaling can also change the direction.\nA vector is a list of numbers in some space, where the dimension of space is the number of elements in the vector representation. For example, if the vector is represented by a pair of numbers, than it lies in 2D space, where we can show it as an arrow, with it tail always at the origin and head pointing at the co-ordinates by which the vector is being represented, here the pair of numbers.\n\n2. How do you add two vectors? What is its physical significance?\nTo add two vectors, we do component wise addition of both the vectors, and the requirement to add both the vectors is that they must be in same system, like both the vectors must be represented as pair of numbers, or triplets of numbers, or some n-collection of numbers.\n\\(eg: [a,b,c] + [x,y,z] = [a+x, b+y, c+z]\\)\nThe physical significance of adding two vectors, can be understood as, the combined movement of both the vecors.\nHere the first vector is represented as moving along a units on the x-axis, b units parrallel to y-axis, and finally c units alongs the z-axis. When this is added to the second vector, it is the combined movement along each axis, which is a units on x-axis and than moving x units again on the x-axis, similarly first moving b units on y-axis and further moving y units parallel to y-axis and finally moving c units along z-axis and than moving z units along the z-axis.\nThis entire movement is equal to moving a+x units on x-axis, b+y units parallel to y-axis and finally c+z units along the z-axis.\nHence adding two vectors is equal to just adding the vectors corresponding components.\n\n3. How do you mulitply a scalar with a vector? Think of an application.\nWhen we multiply a scalar with a vector, it either expands/strech out the vector by the scalar(‘number’) it is being multiplied or contracts/squished the vector if the scalar is between 0 and 1.\nAlso, if the vector is multiplied by a negative scalar, the vector change it’s direction by 180°, which means the vector now go in opposite direction and also is extends or contracts by the scalar value which is being multiplied.\nIn mathematical terms, scalar multiplication is just multiplying each component of the vector with the scalar value.\n\nThe scalar multiplication can be used to estimate one variable as scalar multiplication of other variable. For example if we have a vector of weights of a person, and if we know the relation between weight and height of a person(where \\(height = \\alpha * weight\\)), than we can represent the height of all persons as the scalar multiplication of the weight vector with \\(\\alpha\\)."
  },
  {
    "objectID": "01_Mathematics_I/00_LinearAlgebra.html#chapter-2",
    "href": "01_Mathematics_I/00_LinearAlgebra.html#chapter-2",
    "title": "Linear Algebra Questionverse",
    "section": "Chapter 2",
    "text": "Chapter 2\n4. What is \\(\\hat{i}\\) vector and a \\(\\hat{j}\\) vector. Why are they important?\nThe \\(\\hat{i}\\) vector is a unit vector, having the length 1, along the x-axis and similarly \\(\\hat{j}\\) is a unit vector in the y-direction.\nSo, now with this two vectors, we can represent any vector (x,y), by thinking as the x-coordinate of the vector, that scales the \\(\\hat{i}\\), stretching/contracting by a factor of x. And similarly the y-cordinate of the vector as the scalar that scales the \\(\\hat{j}\\) vector by a factor of y.\nAnd the final vector is the resultant of adding those two sclaed vectors. In this sense, the vectors these co-ordinate (x,y) desctibe is the sum of two scaled vectors \\(\\hat{i}\\) and \\(\\hat{j}\\).\n\n5. Why not consider any other basis vectors instead of the standard unit vectors?\nThe standard unit vectors can be used to easily generate any vector in its vector space, where the first co-ordinate of the vector is just the scalar multlication of the first standard basis vector(x-axis), and second co-ordinate is scalar multiplication of second standard basis vector and so on.\nAny vector can be represented by any set of random basis vectors, but the linear combinations in the cartesian system will be difficult to identify, since those random basis vectors are itself having some x and y co-ordinates value, which directly multiplying with scalar doesn’t give the co-ordinates of the new vector.\n6. How can one get any vector from the basis vectors? What is the intuition?\nSince, the basis vectors are linearly independent and the linear combinations of the basis vectors span the entire the space, we can generate any vector."
  },
  {
    "objectID": "01_Mathematics_I/04_Maths_12_Sept_12_24.html",
    "href": "01_Mathematics_I/04_Maths_12_Sept_12_24.html",
    "title": "Plaksha",
    "section": "",
    "text": "06 Maths Assignment 12th September - 12th to 24th Question\nQuestion 12\nConsider a straight line \\(y=2x+1\\) in \\(ℝ^2\\), does it form a subspace of \\(ℝ^2\\)?\nNo, the straight line doesn’t pass through the origin, which mean any point on the line, when multiplied with \\(0\\), gives \\((0,0)\\) which doesn’t lie on the line, not making it a subspace of \\(ℝ^2\\)\n\nQuestion 13\nConsider a unit circle in \\(ℝ^2\\), centered at origin, is it a subspace of \\(ℝ^2\\)?\nNo, a unit circle in \\(ℝ^2\\) which is centered at origin, is not a subspace in \\(ℝ^2\\). Since, two points in the circle, \\((0,1)\\) and \\((1,0)\\) when added together, goes beyond the circle.\n\nQuestion 14\nWhat are all the subspaces of \\(ℝ^2\\)?\nAll the subspaces of the vector space \\(ℝ^2\\) are:\n\nOrigin - \\((0,0)\\)\nAny Line passing through origin. \\(\\alpha x = 0\\) where \\(x\\in ℝ^2\\) and \\(\\alpha \\in ℝ\\)\n\nQuestion 15\nWhat are all the subspaces of ℝ3?\nAll the subspaces of the vector space \\(ℝ^2\\) are:\n\nOrigin - \\((0,0)\\)\nAny Line passing through the origin. \\(\\alpha x\\) where \\(x \\in ℝ^3\\) and \\(\\alpha \\in ℝ\\)\nAny Plane passing through the origin. \\(\\alpha x + \\beta y\\) where \\(x,y \\in ℝ^3\\) and \\(\\alpha, \\beta \\in ℝ\\)\n\nQuestion 16\nGiven \\(ℝ^3\\), pick any two points \\(u,v∈ℝ^3\\). Note that \\({αu+βv | α,β∈ℝ}\\) is a subspace of \\(ℝ^3\\). Generalize this idea!\nAll the possible linear combinations of two points in \\(ℝ^3\\) is the linear span which is the subspace of \\(ℝ^3\\).\nGeneralizing it, for \\(ℝ^n\\), we have to prove the linear combinations of \\((n-1)\\) points in this \\(ℝ^n\\) is the subspace of \\(ℝ^n\\)\n\\(S = \\{u_1, u_2, u_3, ...., u_{n-1}\\}\\)\n\\(L(S) =\\) is all the possible linear combinations of S, which is known as Linear Span of S\nNow, we have to prove that \\(L(S)\\) is a subspace of \\(ℝ^n\\).\n\\[\nx = \\alpha_1 u_1 + \\alpha_2 u_2 + \\alpha_3 u_3 + ... + \\alpha_{n-1} u_{n-1}\n\\]\n\\[\ny = \\beta_1 u_1 + \\beta_2 u_2 + \\beta_3 u_3 + ... + \\beta_{n-1} u_{n-1}\n\\]\n\\[\nx,y \\in L(S)\n\\]\nNow, to prove that \\(L(S)\\) is a subspace of \\(ℝ^n\\), we have to prove two following conditions:\n\\[\nx+y = z \\in L(S)\n\\]\n\\[\n\\lambda x \\in L(S)\n\\]\nProof:\n\\[\nx + y = (\\alpha_1 u_1 + \\beta_1 u_1) + (\\alpha_2 u_2 + \\beta_2 u_2) + ... + (\\alpha_{n-1} u_{n-1} + \\beta_{n-1} u_{n-1})\n\\]\n\\[\nx + y = (\\alpha_1 + \\beta_1)u_1 + (\\alpha_1 + \\beta_1)u_2 + ... + (\\alpha_{n-1} + \\beta_{n-1})u_{n-1}\n\\] Since, \\(L(S)\\) contains all possible combinations, the above \\(x+y \\in L(S)\\)\n\\[\n\\lambda x = \\lambda \\alpha_1 u_1 + \\lambda \\alpha_2 u_2 + ... + \\lambda \\alpha_{n-1} u_{n-1}\n\\] Again, since \\(L(S)\\) contains all possible combinations, the above \\(\\lambda x \\in L(S)\\)\nQuestion 17\nThe set \\({αu+βv|α,β∈ℝ}\\) is called the linear combination of vectors \\(u\\) and \\(v\\). We can generalize this to \\(k\\) vectors. Observe what this set is all about?\nThe entire set when generalized to \\(k\\) vectors, is the linear span of \\(k\\) vectors, which is the subspace.\nQuestion 18\nWe say that a vector \\(w\\) is manufactured by \\(u\\) and \\(v\\) if \\(w∈{αu+βv|α,β∈ℝ}\\).\nYes, when we do \\(w∈{αu+βv|α,β∈ℝ}\\), we get all possible vectors in \\(ℝ^2\\), so we can manufacture any \\(w\\) by the linear combinations of \\(u\\) and \\(v\\)\nQuestion 19\nShow that \\((1,2,3)\\) and \\((4,5,6)\\) can manufacture \\((7,8,9)\\). Also \\((4,5,6)\\) and \\((7,8,9)\\) can manufacture \\((1,2,3)\\). Finally \\((4,5,6)\\) can be manufactured by the other two vectors.\nFor 1st case \\(\\alpha = -1\\) and \\(\\beta = 2\\)\nFor 2nd case \\(\\alpha = 2\\) and \\(\\beta = -1\\)\nFor 3rd case \\(\\alpha = 1/2\\) and \\(\\beta = 1/2\\)\nQuestion 20\nCan \\((2,1,0)\\) and \\((3,0,8)\\) manufacture \\((1,1,1)\\) ?\nNo, since we have inconsistent system, where \\[\n2x + 3y = 1\n\\]\n\\[\nx = 1\n\\]\n\\[\n8y = 1\n\\]\nAll the three equations doesn’t satisfy simultaneously.\nQuestion 21\nCan \\((0,0,1)\\) and \\((0,1,0)\\) manufacture \\((1,0,0)\\)?\nNo, since \\((0,0,1)\\) and \\((0,1,0)\\) is the \\(yz\\) plane, we can never get \\((1,0,0)\\)\nQuestion 22\nWhen can two vectors in \\(ℝ^3\\) manufacture a given third vector?\nIf we have the third vector in the span of the first two vector, it can be manufactured.\nQuestion 23\nWhen can two vectors in \\(ℝ^3\\) fail to manufacture a given third vector?\nIf the third vector doesn’t lie in the span of the first two vectors, it can’t be manufactured\nQuestion 24\nIf \\(\\{u,v,w\\}\\) are such that a vector in this set can be manufactured by some vectors in the same set, then such a set is called a linearly dependent set.\nYes, since one vector is the combination of the other vectors, and add NO extra value, which means it is dependent on other vectors, hence the set is linearly dependent set"
  },
  {
    "objectID": "01_Mathematics_I/05_Maths_13_Sept.html",
    "href": "01_Mathematics_I/05_Maths_13_Sept.html",
    "title": "Plaksha",
    "section": "",
    "text": "07 Maths Assignment 13th Sept\n\n\\[\\begin{equation}\nMarkov =\n\\begin{bmatrix}\n0.5 & 0.1 & 0.2\\\\\n0.3 & 0.6 & 0.4\\\\\n0.2 & 0.3 & 0.4\n\\end{bmatrix}\n\\end{equation}\\]\nWe know that the Highest Eigen Value \\(\\lambda\\) is 1, which converges the Markov matrix towards the highest eigen value corresponding vector \\(V_{1}\\) So our final probability, which the Markov matrix converges to after many simulations is \\([v_1, v_2, v_3]\\)\n$$ \\[\\begin{equation}\n\\begin{bmatrix}\n0.5 & 0.1 & 0.2\\\\\n0.3 & 0.6 & 0.4\\\\\n0.2 & 0.3 & 0.4\n\\end{bmatrix}\n\n\\begin{bmatrix}\nv_1 \\\\\nv_2 \\\\\nv_3\n\\end{bmatrix}\n\n=\n\n\\begin{bmatrix}\nv_1 \\\\\nv_2 \\\\\nv_3\n\\end{bmatrix}\n\\end{equation}\\] $$\nNow we have \\[\n\\begin{equation}\n    0.5v_1 + 0.1v_2 + 0.2v_3 = v_1 \\tag{1}\n\\end{equation}\n\\]\n\\[\n\\begin{equation}\n    0.3v_1 + 0.6v_2 + 0.4v_3 = v_2 \\tag{2}\n\\end{equation}\n\\]\n\\[\n\\begin{equation}\n0.2v_1 + 0.3v_2 + 0.4v_3 = v_3 \\tag{3}\n\\end{equation}\n\\]\nAlso, we know the values of the principal eigen vector, are probabilities of the states, so the sum of these values must be 1.\n\\[\n\\begin{equation}\n    v_1 + v_2 + v_3 = 1 \\tag{4}\n\\end{equation}\n\\]\nSolving \\((1)\\), \\((2)\\) and \\((4)\\) we get\n\\[\nv_1 = 0.2181\n\\] \\[\nv_2 = 0.4727\n\\] \\[\nv_3 = 0.3090\n\\]\nNow, we start with 100 people at Hostel, 100 people at Plaksha and 100 people at Sector-17\n\n.2181*300, 0.4727*300, 0.3090*300\n\n(65.42999999999999, 141.81, 92.7)\n\n\nAfter the convergence, the state the system is in:\nPeople at Hostel: \\(0.2181*300 = 65.5\\)\nPeople at Plaksha: \\(0.4727*300 = 141.8\\)\nPeople at Sector-17: \\(0.3090*300 = 92.7\\)"
  },
  {
    "objectID": "00_Implementations/01_BackPropogation/main.html",
    "href": "00_Implementations/01_BackPropogation/main.html",
    "title": "Plaksha",
    "section": "",
    "text": "from typing import List, Union\nimport math\nimport numpy as np\n\n\nclass Network():\n    def __init__(self,\n                    input_size: int,\n                    num_layers: int, \n                    units: Union[int, List[int]],\n                    output_size: int\n                    ):\n        '''\n        The class creates a Feed Forward Fully connected Network\n\n        Arguments:\n            input_size: int -> The number of neurons in the input layer\n            num_layers: int -> The number of hidden layers in the network\n            units: Union[int, List[int]] -> If it's `int`, all layers have same size\n                                            If it's list of ints, length should be \n                                            equal to number of layers\n            output_size: int -> The number of neurons in the output layer\n        '''\n        self.num_layers = num_layers\n        units = [units]*num_layers if type(units) == int else units\n        self.units = [input_size] + units + [output_size]\n\n        self.layers = []\n        for i in range(self.num_layers + 1):\n            # Weight Matrix Transpose\n            self.layers.append( [ [0]*self.units[i] ]*self.units[i+1] )\n    \n    def _sigmoid(self, input: List[float]):\n        output = []\n        for val in input:\n            output.append( 1/(1+math.e**(-val)) )\n        return output\n\n    def forward(self, input: List):\n        x = input.copy()\n        for layer in self.layers:\n            new_x = []\n            for weights in layer:\n                val = 0\n                for idx in range(len(weights)):\n                    val += x[idx]*weights[idx]\n                new_x.append(val)\n            x = self._sigmoid(new_x)\n        \n        return x\n\n    def backward(self):\n        \n\n\nnet = Network(5, 4, 3, 1)\n\n\nnet.layers\n\n[[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]],\n [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n [[0, 0, 0]]]\n\n\n\nnet.forward([1,1,1,1,1])\n\n[0.5]\n\n\n\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch\n\nclass pyNet(nn.Module):\n    \n    def __init__(self):\n        super(pyNet, self).__init__()\n        self.linear1 = nn.Linear(5,3,bias=False)\n        self.linear1.weight.data.fill_(0.0)\n\n        self.linear2 = nn.Linear(3,3,bias=False)\n        self.linear2.weight.data.fill_(0.0)\n\n        self.linear3 = nn.Linear(3,3,bias=False)\n        self.linear3.weight.data.fill_(0.0)\n\n        self.linear4 = nn.Linear(3,1,bias=False)\n        self.linear4.weight.data.fill_(0.0)\n\n\n    def forward(self, x):\n\n        x = torch.sigmoid(self.linear1(x))\n        x = torch.sigmoid(self.linear2(x))\n        x = torch.sigmoid(self.linear3(x))\n        x = torch.sigmoid(self.linear4(x))\n        \n        return x\n\n\ntorchNet = pyNet()\nprint(torchNet(torch.tensor([1.,1.,1.,1.,1.])))\n\ntensor([0.5000], grad_fn=<SigmoidBackward0>)"
  },
  {
    "objectID": "02_Python_Programming/00_Assignment.html",
    "href": "02_Python_Programming/00_Assignment.html",
    "title": "01 Programming Assignment",
    "section": "",
    "text": "import math\nfrom typing import List\nimport random\nimport numpy as np"
  },
  {
    "objectID": "02_Python_Programming/00_Assignment.html#chapter-01",
    "href": "02_Python_Programming/00_Assignment.html#chapter-01",
    "title": "01 Programming Assignment",
    "section": "Chapter 01",
    "text": "Chapter 01\nQuestion 1\nPrint the following using four print statements:\n*\n**\n***\n****\n\nprint(\"*\")\nprint(\"**\")\nprint(\"***\")\nprint(\"****\")\n\n*\n**\n***\n****\n\n\nQuesiton 2:\nFigure out how to input a number and display it using print statement.\n\nn = 5 #int(input(\"Enter the Number of Lines to be printed\"))\nfor i in range(1,n+1):\n    print(\"*\"*i)\n\n*\n**\n***\n****\n*****\n\n\nQuestion 3\nUnderstand how to use a if loop in python. Ask the user to enter a number and check if the number is even or odd.\n\nnum = 15 # int(input(\"Enter the Number\"))\nif num % 2 == 0 : print(\"Even\")\nelse: print(\"Odd\")\n\nOdd\n\n\nQuestion 4:\nPrint a sequence of numbers starting from the number a with common difference d. Go on till you reach the number b.\nEnter a value for a: 10\nEnter a value for d: 3\nEnter a value for b: 20\nOutput: 10 13 16 19\n\na = 10 # int(input(\"Enter value for a:\"))\nd = 3 # int(input(\"Enter value for d:\"))\nb = 20 # int(input(\"Enter value for b:\"))\n\nfor i in range(a,b,d):\n    print(i)\n\n10\n13\n16\n19\n\n\nQuestion 5:\nInput integers i and j and create a list comprising of all prime numbers between them.\n\nm = 12 # int(input('Enter the First Number'))\nn = 88 # int(input('Enter the Second Number'))\n\nprimeList = []\nfor i in range(m,n+1):\n    if i in [0,1]:\n        break\n    prime = True\n    for j in range(2,int(math.sqrt(i))+1):\n        if i%j == 0:\n            prime = False\n            break\n    if prime: primeList.append(i)\n\nprint(primeList)\n\n[13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83]\n\n\nQuestion 6:\nObserve the following code :\nWhat does the following code do:\nprint(\"Enter a number\")\nk=input()\nk=int(k)\nfor i in range(k):\n   for j in range(i):\n   print(\"*\",end=' ')\nprint(\"\")\nSomething is wrong in this code. Fix it!\n\nprint(\"Enter a number\")\nk= 8 # input()\nk=int(k)\nfor i in range(k):\n   for j in range(i):\n    print(\"*\",end=' ')\nprint(\"\")\n\nEnter a number\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * \n\n\nQuestion 7:\nWrite a script to print the following:\nInput a number: 5\nOutput: \n    *\n   ***\n  *****\n *******\n*********\n\nn = 5 # int(input(\"Enter the Number of Lines\"))\n\nfor i in range(1,n+1):\n    m = (n-i) \n    print(\" \"*m + \"*\"*(2*i - 1))# + \" \"*m)\n\n    *\n   ***\n  *****\n *******\n*********\n\n\nQuestion 8:\nWrite a script to print the following zig zag:\n*\n *\n  *\n   *\n    *\nInput parameters: number of lines, inclination\nNote: Input parameters are self-explanatory, inclination is a value between 0 and 1. Lesser the inclination, more vertical the stick.\n\nnumLines = 8 # int(input(\"Enter Number of Lines\"))\ninclination = 0.2 # float(input(\"Inclination of Line\"))\n\nif inclination == 1:\n    print(\"*\"*numLines)\nelse:\n    for i in range(numLines+1):\n        print(\" \"*int(10*inclination*i) + \"*\")\n\n*\n  *\n    *\n      *\n        *\n          *\n            *\n              *\n                *\n\n\n\nAssignment 01\nImplement the following patter as in this video\n\nx = 20\na = -0.2\n\nfor i in range(-x//2, x//2):\n        spaces = int(4*i*i*a)\n        if a > 0:\n            print(\" \"*spaces + \"*\")\n        if a < 0:\n            max_spaces = int( 4 * (x//2)**2 * abs(a) )\n            spaces = -1 * spaces\n            print(\" \" * ( max_spaces - spaces) + \"*\")\n\n*\n                *\n                             *\n                                         *\n                                                    *\n                                                            *\n                                                                    *\n                                                                         *\n                                                                             *\n                                                                                *\n                                                                                *\n                                                                                *\n                                                                             *\n                                                                         *\n                                                                    *\n                                                            *\n                                                    *\n                                         *\n                             *\n                *\n\n\nExtra Question\nFind the Square Root of a Number, using an approach of guessing and moving towards the answer.\n\nUsing Binary Search\n\n\ndef sqrtBinary(number, start, end, numDecimal):\n    mid = (start+end)/2\n    midSq = mid**2\n    if math.isclose(number, midSq, abs_tol=10e-100):\n        return mid\n    elif number - midSq > 0:\n        return sqrtBinary(number, mid, end, numDecimal)\n    else:\n        return sqrtBinary(number, start, mid, numDecimal)\n\ndef sqrtBinary(number, start, end, numDecimal):\n    mid = (start+end)/2\n    midSq = mid**2\n    if math.isclose(number, midSq, abs_tol=10e-100):\n        return mid\n    elif number - midSq > 0:\n        return sqrtBinary(number, mid, end, numDecimal)\n    else:\n        return sqrtBinary(number, start, mid, numDecimal)\n\nnum = 10\nstart = 0\nend = num//2\nnumDecimal = 5\nprint(\"Square Root using our function:\", sqrtBinary(num, start, end, numDecimal))\nprint(\"Square Root using math.sqrt:\", math.sqrt(num))\n\n# test_close(sqrtBinary(num, start, end, numDecimal), math.sqrt(num), eps = 0.000_000_001)\n\nSquare Root using our function: 3.162277659866959\nSquare Root using math.sqrt: 3.1622776601683795"
  },
  {
    "objectID": "02_Python_Programming/00_Assignment.html#chapter-02",
    "href": "02_Python_Programming/00_Assignment.html#chapter-02",
    "title": "01 Programming Assignment",
    "section": "Chapter 02",
    "text": "Chapter 02"
  },
  {
    "objectID": "02_Python_Programming/00_Assignment.html#bubble-sort",
    "href": "02_Python_Programming/00_Assignment.html#bubble-sort",
    "title": "01 Programming Assignment",
    "section": "Bubble Sort",
    "text": "Bubble Sort\n\ndef bubbleSort(array: List):\n    length = len(array)\n    for i in range(length, 0, -1):\n        noSwap = True\n        for j in range(i-1):\n            if array[j] > array[j+1]:\n                array[j], array[j+1] = array[j+1], array[j]\n                noSwap = False\n    if noSwap:\n        return array\n    return array\n\ndef bubbleSort(array: List):\n    length = len(array)\n    for i in range(length, 0, -1):\n        noSwap = True\n        for j in range(i-1):\n            if array[j] > array[j+1]:\n                array[j], array[j+1] = array[j+1], array[j]\n                noSwap = False\n    if noSwap:\n        return array\n    return array\n\nrandomArray = list(range(34, 1225))\nrandom.shuffle(randomArray)\n\n# test_eq(sorted(randomArray), bubbleSort(randomArray))\n\n\ndef findKth(array:List, k: int):\n    return bubbleSort(array)[k-1]   \n\n\nrandomArray = list(range(34, 1225))\nrandom.shuffle(randomArray)\nfindKth(randomArray, 7)\n\n40"
  },
  {
    "objectID": "02_Python_Programming/Programming_Assignment_4.html",
    "href": "02_Python_Programming/Programming_Assignment_4.html",
    "title": "03 Programming Assignment 4 - File Handling",
    "section": "",
    "text": "import random\nimport matplotlib.pyplot as plt\nfrom QuickSort import quickSort\n\nQuestion\nAll possible English words are available to download here. Save this to a file and read from this file, randomzize the order and write it back to the file.\nTip: use wget http://www.mieliestronk.com/corncob_lowercase.txt to download\n\nwith open('./data/corncob_lowercase.txt', 'r') as english_file:\n    all_words = english_file.read()\n\nall_words = all_words.split('\\n')\n\nassert not '' in all_words\n\n\nrandom.shuffle(all_words)\n\nrandomized_string = '\\n'.join(all_words)\nwith open('./data/corncob_lowercase.txt', 'w') as randomized_file:\n    randomized_file.write(randomized_string)\n\nQuestion\nConsider the list of randomized words as created in the previous program, sort it and write it back to the file.\n\nwith open('./data/corncob_lowercase.txt', 'r') as randomized_file:\n    toSort = randomized_file.read().split('\\n')\n\n\ntoSort = quickSort(toSort, 0, len(toSort)-1)\n\n\nsorted_words = '\\n'.join(toSort)\nwith open('./data/corncob_lowercase.txt', 'w') as sorted_file:\n    sorted_file.write(sorted_words)\n\n\nAssignment\nDownload this to your hard-disk and sort it. (Note: Any complicated sorting technique will not help. You are not allowed to browse the internet for the code or for any other hint. You cannot discuss with your neighbors. Solve this from first principles.)\nthis file: DONT OPEN https://sudarshansudarshan.github.io/plakshaprog/files/tosort.txt\nThe file has 10 Million rows, freezing the computer.\nTip: download using wget or request.get().\n\n# !wget https://sudarshansudarshan.github.io/plakshaprog/files/tosort.txt\n\n\nwith open('./data/tosort.txt', 'r') as largeLargeFile:\n    largeText = largeLargeFile.read().split('\\n')\n# To remove empty line at end\nlargeText.pop()\nlen(largeText)\n\n10000000\n\n\n\n# largeText = quickSort(largeText, 0, len(largeText)-1)\n\nSince sorting it gives recursion, error. Let’s usefirst principles.\nLet’s count the number of character present in the file, and since we know the inherent ordering of english alphabets. We can than just write to the file the same number of alphabet characters in order.\n\nalphabet_dict = {}\nfor alpha in largeText:\n    alphabet_dict[alpha] = alphabet_dict.get(alpha, 0) + 1\n\n\nalphabet_dict = sorted(alphabet_dict.items(), key=lambda item: item[0])\nalphabet_dict\n\n[('a', 385058),\n ('b', 385520),\n ('c', 385394),\n ('d', 384992),\n ('e', 383359),\n ('f', 384207),\n ('g', 385701),\n ('h', 384611),\n ('i', 383741),\n ('j', 384317),\n ('k', 383037),\n ('l', 384399),\n ('m', 385140),\n ('n', 383715),\n ('o', 384455),\n ('p', 385395),\n ('q', 385536),\n ('r', 385217),\n ('s', 384427),\n ('t', 385128),\n ('u', 383785),\n ('v', 384986),\n ('w', 384205),\n ('x', 384219),\n ('y', 384845),\n ('z', 384611)]\n\n\n\n# Runs the first loop, and gets alpha,it's count value\n# Than run the second loop for each alpha,value pair of first loop\n# In second loop it runs for value times, and add alpha each time to list\nsortedList = [alpha for alpha,value in alphabet_dict for _ in range(value)]\nlen(sortedList)\n\n10000000\n\n\n\nsorted_words = '\\n'.join(sortedList)\nwith open('./data/sorted.txt', 'w') as sortedFile:\n    sortedFile.write(sorted_words)"
  },
  {
    "objectID": "02_Python_Programming/index.html",
    "href": "02_Python_Programming/index.html",
    "title": "Introduction to Prgramming",
    "section": "",
    "text": "Assignemnt 1-3\nAssignemnt 4\nMedian"
  }
]